package com.banzaicloud.spark.metrics

import java.util

import com.codahale.metrics.MetricRegistry
import io.prometheus.client.Collector
import io.prometheus.client.Collector.MetricFamilySamples
import collection.JavaConverters._


/**
  * Exporter that overrides the help message generated by [[io.prometheus.client.dropwizard.DropwizardExports]]
  * such as help messages are consistent for the same metrics across multiple runs
  * @param registry the metrics registry that holds all the DropWizard metrics
  */
class DropwizardExports(registry: MetricRegistry) extends io.prometheus.client.dropwizard.DropwizardExports(registry) {


  /**
    * Returns the list of metrics stored by #registry in format expected by Prometheus. Applies #metricsNameCaptureRegex
    * regular expression to metric name to capture the parts that will be replaced by the expression specified
    * in #replacement
    * @return metrics collection with replaced names.
    */
  override def collect(): util.List[Collector.MetricFamilySamples] = {
    val metrics = super.collect().asScala

    metrics map {
      mfs => new Collector.MetricFamilySamples(
        mfs.name,
        mfs.`type`,
        "Generated from Dropwizard metric import",
        mfs.samples.asScala map {
          s => new MetricFamilySamples.Sample(
            s.name,
            s.labelNames,
            s.labelValues,
            s.value,
            s.timestampMs
          )
        } asJava
      )
    } asJava
  }
}
